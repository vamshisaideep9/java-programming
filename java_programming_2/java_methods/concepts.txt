JAVA METHODS:

java methods are block of code that perform a specific task. A method allows us to reuse code, Improving both efficiency and organization.
All methods in java must belong to a class. Methods are similar to functions and expose the behavior of objects.

KEY COMPONENTS OF METHODS:
Methods consist of modifier (Define Access Level), return type (What value returned or void), 
name (Define the name of method follows camelCase), parameters (optional inputs), and a body.

WHY USE METHODS?
Break code into separate methods helps improve readability, reusability, and maintainability.

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------

METHOD CALL STACK IN JAVA
java is an object-oriented and stack-based programming language where methods play a key role in controlling the program's execution flow.
When a method is called java uses an internal structure known as the call stack to manage execution, variables, and return addresses.

WHAT IS A CALL STACK?
The call stack is a data structure used by the program during runtime to manage method calls and local variables. it operates in a Last-in-first-Out (FIFO) manner.
Meaning the last method called is the first one to complete and exit.

HOW ARE METHODS EXECUTED?
1. A new stack frame is added to the call stack to store the method details.
2. The methods runs its code.
3. After execution, the stack frame is removed, and control goes back to the calling method.

Java automatically manages the call stack using the JAVA Virtual MAchine (JVM).


TYPE OF METHODS IN JAVA
1. PREDEFINED METHODS -> Predefined methods are the method that is already defined in the java class libraries.
    Aka standard library method or the builtin library method.
    EX: Math.random();
        Math.PI;
2. USER-DEFINED METHOD -> The method written by the user or the programmer is known as user-defined methods.
    EX: Greet();

-----------------------------------------------------------------------------------------------------------------------

DIFFERENT WAYS TO CREATE JAVA METHOD.

1. INSTANCE METHOD: Access the instance data using the object name. Declared inside a class.
2. STATIC METHOD: Access the static data using class name. Declared inside class with static keyword.

-------------------------------------------------------------------------------------------------------------------------

METHOD SIGNATURE

It consists of the method name and a parameter list.
- Number of parameters
- Type of the parameters
- Order of the parameters
EX: max(int x, int y) Number of parameters is 2, The parameter is int.

----------------------------------------------------------------------------------------------------------------------------------

NAMING A METHOD

Method name is typically a single word that should be a verb in lowerCase or multi-word, that begins with a verb in lowerCase
Followed by an adjactive noun. 

RULES TO NAME A METHOD:
- Method name must start with a verb with lowerCase
- multi-word names should follow camelCase format.
- Method names should be unique.

------------------------------------------------------------------------------------------------------------------------------------------

CALLING DIFFERENT TYPES OF METHODS IN JAVA

Method calling in java means invoking a method to execute the code it contains. It transfers control to the process, run its logic,
and then returns to the calling point after execution.

1. CALLING A USER-DEFINED METHOD
User-defined methods are blocks of code written by the programmer. TO execute a user-defined method, we first create a object of the class and then
call the method using that object.

2. CALLING AN ABSTRACT METHOD
Abstract methods have no body and must be overridden in a subclass. They are called using an object
of the subclass.

3. CALLING PREDEFINED METHODS
Java provides many built-in methods via the java standard library, Like hashcode(). Objects memory address hash.

4. CALLING A STATIC METHOD
Static methods belong to the class, not the object. They can be called without creating an object.

