ACCESS MODIFIERS IN JAVA

In java, access modifiers are essential tools that define how the members of a class, like variables, 
methods, and even the class itself can be accessed from other parts of our program.

They are 4 types of access modifiers:

1. PRIVATE ACCESS MODIFIERS
The private access modifiers is specified using the keyword private. The methods are data memebers
declared as private are accessible only within the class in which they are declared.

2. DEFAULT ACCESS MODIFIER
When no access modifier is specified for a class, method, or data member. It is said to have the
default access modifier by default. This means only classes within the same package can access it.
-> Members with the default access cannot be accessed from classes in a different pacakge.

3. PROTECTED ACCESS MODIFIER
The protected access modifier is specified using the keyword protected. The methods or data members
declared as protected are accessible within the same package or subclass in different packages.

4. PUBLIC ACCESS MODIFIER
Specified using the keyword public. Public members are accessible from everywhere in the program. 
There is no restriction on the scope of the public data members.

--------------------------------------------------------------------------------------------------------------------

WHEN TO USE EACH ACCESS MODIFIER IN REAL-WORLD PROJECTS:

1. PRIVATE -> The idea should be use as restrictive access as possible, so private should be used 
as much as possible.
2. DEFAULT -> Often used in package-scoped utilities or helper classes.
3. PROTECTED -> Commonly used in inheritance-based designs like framework extensions.
4. PUBLIC -> This is used for API endpoints, service classes, or utility methods Shared
across different parts of an application.